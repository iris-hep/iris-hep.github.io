open: yes
postdate: 2020-10-06
title: "**Floating point error evaluation with Clad**"
description: "Estimating floating point computation errors is as important as the computation itself. Accurate error estimation requires processing the code, arithmetic operations, and assignments for each input variable and dependent intermediate ones. It is virtually impossible to make an accurate error estimation by hand. In cases where it is possible, it can make the code less readable and maintainable. One approach is the application of automatic differentiation (AD) techniques. The AD technology decomposes the computation graph into atomic operations, which can then be used to follow differential calculus rules to produce a derivative. Adding a set of extra rules to estimate the floating point error for automatic differentiated functions is straightforward. <br />

Clad is a source transformation AD tool for C++. It is based on LLVM compiler infrastructure and is implemented as a plugin for C++ compiler Clang, which allows Clad to be transparently integrated into the compilation phase, and to utilize large parts of the compiler itself. Clad relies on Clangâ€™s parsing and code generation functionalities and can differentiate complicated C++constructs in both forward and reverse mode. It is available as a standalone Clang plugin that,when attached to the compiler, produces derivatives in the compilation phase. <br /> 

The project aims to develop of a generic error estimation framework which is not bound to a particular error approximation model. It should allow users to select their preferable estimation logic and should automatically generate functions augmented with code for the specified error estimator."

contacts:
 - davidlange6
 - vgvassilev
